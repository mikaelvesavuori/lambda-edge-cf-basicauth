service: lambda-edge-cf-basicauth

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1 # "CloudFront associated functions have to be deployed to the us-east-1 region."
  role: LambdaEdgeRole
  memorySize: 128 # Max size
  timeout: 5
  logRetentionInDays: 14
  versionFunctions: true
  lambdaHashingVersion: 20201221
  deploymentBucket:
    blockPublicAccess: true
    maxPreviousDeploymentArtifacts: 5
    serverSideEncryption: AES256
  stackTags:
    Usage: ${self:service}
  tags:
    Usage: ${self:service}
  apiGateway:
    minimumCompressionSize: 1024
  tracing:
    apiGateway: true
    lambda: true
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
          - xray:PutTelemetryRecords
          - xray:PutTraceSegments
        Resource: "*"
      - Effect: Allow
        Action:
          - events:PutEvents
        Resource:
          - ${self:custom.aws.arns.eventbridgeBus}

plugins:
  - serverless-webpack
  - serverless-offline

package:
  individually: true
  patterns:
    - node_modules/aws-sdk/**
    - node_modules/aws-lambda/**

functions:
  CloudfrontBasicAuth:
    handler: src/index.handler
    description: Edge function that checks for valid basic auth
    # Unnecessary if you will manually tie it to a Cloudfront distribution
    #events:
    #  - cloudFront:
    #      eventType: origin-request
    #      origin: https://yourdomain.com

resources:
  Resources:
    LambdaEdgeRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
        Policies:
          - PolicyName: LambdaEdgeExecutionRole
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "arn:aws:logs:*:*:*"